# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/
endtfenv/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# AWS
.aws/
*.pem

# Terraform
*.tfstate
*.tfstate.*
.terraform/
.terraform.lock.hcl
terraform.tfvars
*.tfvars

# IDE
.vscode/
.idea/
*.swp
*.swo
*~

# OS
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Project specific
*.zip
*.log
test_results/
deployment_logs/
temp/
*.tmp

# Sensitive data
secrets.json
credentials.json
config.json
env_vars.json

# Lambda deployment packages
lambda-functions/*.zip

# Test outputs
test_output/
validation_results/

# Additional exclusions for clean repository
*.html
*.zip
*_test_*.json
debug_*.py
temp_*.py
*_backup.*
*.tmp
*.bak

# Development artifacts
development-history/
archive/
*.log.*
test_output_*/
validation_temp/

# Environment specific
env_vars.json
aws-resources-created
current_policy.json
updated_policy.json

# IDE and editor files
*.code-workspace
.vscode/settings.json

# Additional exclusions for clean repository
*.html
*.zip
*_test_*.json
debug_*.py
temp_*.py
*_backup.*
*.tmp
*.bak

# Development artifacts
development-history/
archive/
*.log.*
test_output_*/
validation_temp/

# Environment specific
env_vars.json
aws-resources-created
current_policy.json
updated_policy.json

# IDE and editor files
*.code-workspace
.vscode/settings.json

# Excluded file
.DS_Store

# Excluded file
enhanced-digital-twin-framework.code-workspace

# Excluded file
test-sample.txt

# Excluded file
requirements-minimal.txt

# Comprehensive exclusions for clean repository

# Temporary and generated files
*.tmp
*.temp
*_temp.*
*_backup.*
*.bak
*.orig

# Development artifacts
test_output*/
debug_output*/
temp_results*/
validation_temp*/

# IDE and editor specific
*.code-workspace
.vscode/settings.json
.idea/workspace.xml

# OS specific
.DS_Store
.DS_Store?
._*
Thumbs.db
ehthumbs.db

# Python specific
*.pyc
*.pyo
*.pyd
__pycache__/
*.so
*.egg
*.egg-info/
dist/
build/

# AWS specific
*.pem
.aws/
aws-resources-created
env_vars.json

# Test and debug files
test_*.json
debug_*.py
*_test_*.json
temp_*.py

# Deployment artifacts
*.zip
deployment_logs/
